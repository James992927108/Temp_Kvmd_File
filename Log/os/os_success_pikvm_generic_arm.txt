[1m[32m===== step 2 - clone pi-builder =====
(B[mrm -rf ./pi-builder/generic-arm/stages/{pikvm,pikvm-image,pikvm-otg-console}
cp -a pikvm pikvm-image pikvm-otg-console ./pi-builder/generic-arm/stages
rm -rf ./pi-builder/generic-arm/stages/pikvm-repo/Dockerfile.part
cp pikvm-repo_Dockerfile.part ./pi-builder/generic-arm/stages/pikvm-repo/Dockerfile.part
rm -rf ./pi-builder/generic-arm/stages/pikvm-otg-console/Dockerfile.part
cp pikvm-otg-console_Dockerfile.part ./pi-builder/generic-arm/stages/pikvm-otg-console/Dockerfile.part
rm -rf ./pi-builder/generic-arm/stages/pikvm/Dockerfile.part
cp pikvm_Dockerfile.part ./pi-builder/generic-arm/stages/pikvm/Dockerfile.part
make -C ./pi-builder/generic-arm os \
	NC= \
	BUILD_OPTS='  \
		--build-arg PLATFORM=v2-hdmiusb \
		--build-arg USTREAMER_VERSION=3.5-1 \
		--build-arg KVMD_VERSION=2.14-1 \
		--build-arg KVMD_WEBTERM_VERSION=0.35-1 \
		--build-arg WIFI_ESSID=EEE_2.4G \
		--build-arg WIFI_PASSWD=987123456 \
		--build-arg WIFI_IFACE=wlan0 \
		--build-arg ROOT_PASSWD=root \
		--build-arg WEBUI_ADMIN_PASSWD=admin \
		--build-arg IPMI_ADMIN_PASSWD=admin \
		--build-arg NEW_HTTPS_CERT=9ffaef58-1522-4d0f-80d8-8c6174b4ce96 \
	' \
	PROJECT=pikvm-os-v2-hdmiusb \
	BOARD=generic \
	STAGES='__init__ os pikvm-repo watchdog ro pikvm pikvm-image __cleanup__' \
	HOSTNAME=pikvm \
	LOCALE=en_US \
	TIMEZONE=Asia/Taipei \
	REPO_URL=http://de3.mirror.archlinuxarm.org
make[1]: Entering directory '/home/aaa/Desktop/pikvm-office/os/pi-builder/generic-arm'
[1m[32m===== Ensuring toolbox image =====
(B[mdocker build \
		--rm \
		--tag pi-builder-arm-toolbox \
		 \
		--file toolbox/Dockerfile.root \
	toolbox
Sending build context to Docker daemon  15.36kB
Step 1/5 : FROM archlinux/base
 ---> a79c9d41e4ac
Step 2/5 : RUN pacman --noconfirm -Syu 	&& pacman --needed --noconfirm -S 		base-devel 		arp-scan 		python 		parted 		dosfstools 		rsync 	&& (pacman --noconfirm -Sc || true)
 ---> Using cache
 ---> 6c55a2072bd8
Step 3/5 : RUN mkdir /tools
 ---> Using cache
 ---> 9770a8e4fb0e
Step 4/5 : COPY install-binfmt /tools/
 ---> Using cache
 ---> c9c0ba1603e5
Step 5/5 : COPY docker-extract /tools/
 ---> Using cache
 ---> 8beebff68b67
Successfully built 8beebff68b67
Successfully tagged pi-builder-arm-toolbox:latest
[1m[32m===== Toolbox image is ready =====
(B[m[1m[32m===== Ensuring arm binfmt =====
(B[mdocker run \
		--rm \
		--tty \
		--privileged \
	pi-builder-arm-toolbox /tools/install-binfmt \
		--mount \
		arm \
		/usr/bin/qemu-arm-static
:: Mounting binfmt_misc to '/proc/sys/fs/binfmt_misc' ...
:: Checking ARM binfmt configuration ...
:: Found existent ARM binfmt handler
:: ARM binfmt handler '/usr/bin/qemu-arm-static' is ready
[1m[32m===== Binfmt arm is ready =====
(B[m[1m[32m===== Ensuring base rootfs =====
(B[mif [ ! -e ./.tmp/base-rootfs-generic.tar.gz ]; then \
	mkdir -p ./.tmp \
	&& curl -L -f http://de3.mirror.archlinuxarm.org/os/ArchLinuxARM-armv7-latest.tar.gz -z ./.tmp/base-rootfs-generic.tar.gz -o ./.tmp/base-rootfs-generic.tar.gz \
; fi
[1m[32m===== Base rootfs is ready =====
(B[m[1m[32m===== Assembling main Dockerfile =====
(B[mrm -rf ./.build
mkdir -p ./.build
ln ./.tmp/base-rootfs-generic.tar.gz ./.build/pikvm-os-v2-hdmiusb-pi-builder-arm-base-rootfs-generic.tgz
cp qemu/qemu-arm-static ./.build
cp -r stages ./.build
sed -i \
		-e 's|%BASE_ROOTFS_TGZ%|pikvm-os-v2-hdmiusb-pi-builder-arm-base-rootfs-generic.tgz|g' \
		-e 's|%QEMU_GUEST_ARCH%|arm|g' \
		-e 's|%QEMU_STATIC_GUEST_PATH%|/usr/bin/qemu-arm-static|g ' \
	./.build/stages/__init__/Dockerfile.part
echo -n > ./.build/Dockerfile
for stage in __init__ os pikvm-repo watchdog ro pikvm pikvm-image __cleanup__; do \
	cat ./.build/stages/$stage/Dockerfile.part >> ./.build/Dockerfile; \
done
[1m[32m===== Main Dockerfile is ready =====
(B[m[1m[32m===== Building OS =====
(B[mrm -f ./.builded.conf
docker build \
		--rm \
		--tag pikvm-os-v2-hdmiusb-pi-builder-arm-result-generic \
		 \
		 \
		--build-arg "BOARD=generic" \
		--build-arg "ARCH=arm" \
		--build-arg "LOCALE=en_US" \
		--build-arg "TIMEZONE=Asia/Taipei" \
		--build-arg "REPO_URL=http://de3.mirror.archlinuxarm.org" \
		--build-arg "PIKVM_REPO_URL=https://pikvm.org/repos" \
		--build-arg "PIKVM_REPO_KEY=912C773ABBD1B584" \
		--build-arg "REBUILD=912c5b3b-9361-48d8-a683-873533eae517" \
		\
	--build-arg PLATFORM=v2-hdmiusb \
	--build-arg USTREAMER_VERSION=3.5-1 \
	--build-arg KVMD_VERSION=2.14-1 \
	--build-arg KVMD_WEBTERM_VERSION=0.35-1 \
	--build-arg WIFI_ESSID=EEE_2.4G \
	--build-arg WIFI_PASSWD=987123456 \
	--build-arg WIFI_IFACE=wlan0 \
	--build-arg ROOT_PASSWD=root \
	--build-arg WEBUI_ADMIN_PASSWD=admin \
	--build-arg IPMI_ADMIN_PASSWD=admin \
	--build-arg NEW_HTTPS_CERT=9ffaef58-1522-4d0f-80d8-8c6174b4ce96 \
 \
	./.build
Sending build context to Docker daemon  518.5MB
Step 1/94 : FROM scratch
 ---> 
Step 2/94 : ADD "pikvm-os-v2-hdmiusb-pi-builder-arm-base-rootfs-generic.tgz" /
 ---> Using cache
 ---> 1d1167581091
Step 3/94 : COPY "qemu-arm-static" "/usr/bin/qemu-arm-static"
 ---> Using cache
 ---> dc97b114a077
Step 4/94 : RUN mkdir -p /etc/pacman.d/hooks 	&& ln -s /dev/null /etc/pacman.d/hooks/30-systemd-tmpfiles.hook
 ---> Using cache
 ---> 8e2906494e0c
Step 5/94 : ARG BOARD
 ---> Using cache
 ---> 1fa62a179d03
Step 6/94 : ENV BOARD $BOARD
 ---> Using cache
 ---> 2596d374a378
Step 7/94 : ARG ARCH
 ---> Using cache
 ---> e42317f4cf52
Step 8/94 : ENV ARCH $ARCH
 ---> Using cache
 ---> 0fa485368588
Step 9/94 : ARG LOCALE
 ---> Using cache
 ---> 988c546645be
Step 10/94 : ENV LOCALE $LOCALE
 ---> Using cache
 ---> 9db57ded8c4b
Step 11/94 : ARG TIMEZONE
 ---> Using cache
 ---> 9fe4f71acc41
Step 12/94 : ENV TIMEZONE $TIMEZONE
 ---> Using cache
 ---> e39a1df1f3af
Step 13/94 : ARG REPO_URL
 ---> Using cache
 ---> 49dab3a8056f
Step 14/94 : ENV REPO_URL $REPO_URL
 ---> Using cache
 ---> 32e41ffccef5
Step 15/94 : ARG PIKVM_REPO_URL
 ---> Using cache
 ---> 6dd73d74d297
Step 16/94 : ENV PIKVM_REPO_URL $PIKVM_REPO_URL
 ---> Using cache
 ---> 3b854cbe2047
Step 17/94 : ARG PIKVM_REPO_KEY
 ---> Using cache
 ---> 48600f311f2a
Step 18/94 : ENV PIKVM_REPO_KEY $PIKVM_REPO_KEY
 ---> Using cache
 ---> ec43b9d217e2
Step 19/94 : RUN echo "$LOCALE.UTF-8 UTF-8" > /etc/locale.gen 	&& ([ "$LOCALE" == "en_US" ] || echo "en_US.UTF-8 UTF-8" >> /etc/locale.gen) 	&& locale-gen
 ---> Using cache
 ---> 3f666c338aa7
Step 20/94 : ENV LC_ALL $LOCALE.UTF-8
 ---> Using cache
 ---> d1e0ef882f5e
Step 21/94 : RUN rm -f /etc/localtime 	&& ln -s "/usr/share/zoneinfo/$TIMEZONE" /etc/localtime
 ---> Using cache
 ---> 0b648da93326
Step 22/94 : RUN echo "HOOKS=(base udev block filesystems)" >> /etc/mkinitcpio.conf
 ---> Using cache
 ---> 251060b1cf30
Step 23/94 : RUN echo "Server = $REPO_URL/\$arch/\$repo" > /etc/pacman.d/mirrorlist 	&& pacman-key --init 	&& pacman-key --populate archlinuxarm
 ---> Using cache
 ---> 27600522292c
Step 24/94 : RUN sed -i -e "s/^CheckSpace/#!!!CheckSpace/g" /etc/pacman.conf
 ---> Using cache
 ---> defc3c04f874
Step 25/94 : RUN pacman --noconfirm -Syy 	&& pacman --needed --noconfirm -S 		glibc 		pacman 	&& pacman-db-upgrade 	&& pacman --noconfirm -Syu 	&& pacman --needed --noconfirm -S 		p11-kit 		archlinux-keyring 		ca-certificates 		ca-certificates-mozilla 		ca-certificates-utils 	&& pacman --needed --noconfirm -S 		base 		base-devel 		vim 		colordiff 		tree 		wget 		unzip 		unrar 		htop 		nmap 		iftop 		iotop 		strace 		lsof 		git 		jshon 		rng-tools 		bc 		ccache 	&& case "$ARCH" in         arm)             case "$BOARD" in                 rpi|rpi2|rpi3|zero|zerow) pacman --needed --noconfirm -S linux-raspberrypi linux-raspberrypi-headers;;                 rpi4) pacman --needed --noconfirm -S linux-raspberrypi4 linux-raspberrypi4-headers;;                 *) pacman --needed --noconfirm -S linux-armv7-headers;;             esac;;         aarch64) pacman --needed --noconfirm -S linux-aarch64-headers;;         *) echo "Unknown architecture: $ARCH"; exit 1;;     esac 	&& (pacman --noconfirm -Sc || true)
 ---> Using cache
 ---> 741e1f3324e7
Step 26/94 : RUN echo 'RNGD_OPTS="-o /dev/random -r /dev/hwrng"' > /etc/conf.d/rngd 	&& systemctl disable haveged 	&& systemctl enable rngd
 ---> Using cache
 ---> 3d1bf8f3cf54
Step 27/94 : COPY stages/os/semop-wrapper.c /tmp
 ---> Using cache
 ---> 470be79b3271
Step 28/94 : RUN gcc -fPIC -shared -o /usr/local/lib/libpreload-semop.so /tmp/semop-wrapper.c
 ---> Using cache
 ---> c7f7c31cfcdd
Step 29/94 : ENV LD_PRELOAD=/usr/local/lib/libpreload-semop.so
 ---> Using cache
 ---> fbe6522adc97
Step 30/94 : RUN sed -i -e "s/^#MAKEFLAGS=.*/MAKEFLAGS=-j5/g" /etc/makepkg.conf
 ---> Using cache
 ---> cf2570778844
Step 31/94 : RUN sed -i -e "s/ \!ccache / ccache /g" /etc/makepkg.conf
 ---> Using cache
 ---> e26bfff10ba6
Step 32/94 : ENV PATH="/usr/lib/ccache/bin/:${PATH}"
 ---> Using cache
 ---> be83c832a045
Step 33/94 : RUN echo "DNSSEC=no" >> /etc/systemd/resolved.conf 	&& systemctl enable systemd-resolved
 ---> Using cache
 ---> 60750bf8622b
Step 34/94 : COPY stages/os/gitconfig /etc/skel/.gitconfig
 ---> Using cache
 ---> 3a7671c48971
Step 35/94 : COPY stages/os/gitconfig /root/.gitconfig
 ---> Using cache
 ---> ab17086d0adb
Step 36/94 : COPY stages/os/gitconfig /home/alarm/.gitconfig
 ---> Using cache
 ---> 6244f82bd3cf
Step 37/94 : RUN mkdir /tmp/linux-profile 	&& git clone https://github.com/mdevaev/linux-profile.git /tmp/linux-profile --depth=1 	&& cp -a /tmp/linux-profile/{.bash_profile,.bashrc,.vimrc,.vimpagerrc,.vim} /etc/skel 	&& cp -a /tmp/linux-profile/{.bash_profile,.bashrc,.vimrc,.vimpagerrc,.vim} /root 	&& cp -a /tmp/linux-profile/{.bash_profile,.bashrc,.vimrc,.vimpagerrc,.vim} /home/alarm 	&& chown -R alarm:alarm /home/alarm/{.bash_profile,.bashrc,.vimrc,.vimpagerrc,.vim,.gitconfig} 	&& rm -rf /tmp/linux-profile
 ---> Using cache
 ---> c03699a51a03
Step 38/94 : COPY stages/os/pistat /usr/local/bin/
 ---> Using cache
 ---> e046ff22c6b0
Step 39/94 : COPY stages/os/pkg-install /usr/local/bin/
 ---> Using cache
 ---> 833ba68b67e0
Step 40/94 : RUN ( 		pacman-key --keyserver hkps://hkps.pool.sks-keyservers.net -r $PIKVM_REPO_KEY 		|| pacman-key --keyserver keyserver.ubuntu.com -r $PIKVM_REPO_KEY 	) 	&& pacman-key --lsign-key $PIKVM_REPO_KEY 	&& echo -e "\n[pikvm]" >> /etc/pacman.conf 	&& 	case "$BOARD" in 			zero|zerow) echo "Server = $PIKVM_REPO_URL/zerow" >> /etc/pacman.conf;; 			rpi|rpi2|rpi3|rpi4) echo "Server = $PIKVM_REPO_URL/$BOARD-$ARCH" >> /etc/pacman.conf;; 			generic) echo "Server = $PIKVM_REPO_URL/rpi4-arm" >> /etc/pacman.conf;; 		esac 	&& echo "SigLevel = Required DatabaseOptional" >> /etc/pacman.conf
 ---> Using cache
 ---> df830d737cd7
Step 41/94 : RUN pkg-install watchdog
 ---> Using cache
 ---> a15f2f03dec1
Step 42/94 : COPY stages/watchdog/watchdog.conf /etc/watchdog.conf
 ---> Using cache
 ---> 151e8b8f3f91
Step 43/94 : RUN systemctl enable watchdog
 ---> Using cache
 ---> 542b226c364c
Step 44/94 : RUN [ ! -f /boot/cmdline.txt ] || sed -i -e "s|\<rw\>|ro|g" /boot/cmdline.txt
 ---> Using cache
 ---> 16f95bbc85ff
Step 45/94 : RUN [ ! -f /boot/boot.txt ] || (         pacman --noconfirm --needed -S uboot-tools         && cd /boot         && sed -i -e "s|\<rw\>|ro|g" boot.txt         && ./mkscr     )
 ---> Using cache
 ---> 12f021ab87ea
Step 46/94 : RUN mkdir -p /var/lib/private 	&& chmod 700 /var/lib/private
 ---> Using cache
 ---> c158ed386dfe
Step 47/94 : COPY stages/ro/fstab /etc/
 ---> Using cache
 ---> 687934bf8d4b
Step 48/94 : COPY stages/ro/ro /usr/local/bin/
 ---> Using cache
 ---> 860b7510d790
Step 49/94 : COPY stages/ro/rw /usr/local/bin/
 ---> Using cache
 ---> 83aa23eac950
Step 50/94 : COPY stages/ro/journald.conf /etc/systemd/
 ---> Using cache
 ---> f35c65b925ba
Step 51/94 : ADD stages/ro/logrotate.override /etc/systemd/system/logrotate.service.d/override.conf
 ---> Using cache
 ---> bcdbea385f4d
Step 52/94 : RUN systemctl disable systemd-random-seed 	&& systemctl disable systemd-update-done 	&& systemctl mask man-db.service 	&& systemctl mask man-db.timer
 ---> Using cache
 ---> 439dae4683fd
Step 53/94 : ARG PLATFORM
 ---> Using cache
 ---> 539e848731a0
Step 54/94 : ARG USTREAMER_VERSION
 ---> Using cache
 ---> 7b9c4e289d10
Step 55/94 : ARG KVMD_VERSION
 ---> Using cache
 ---> d3105e1fc67e
Step 56/94 : ARG KVMD_WEBTERM_VERSION
 ---> Using cache
 ---> ed4f10cce7fd
Step 57/94 : ENV INSTALLATION $PLATFORM $USTREAMER_VERSION $KVMD_VERSION $KVMD_WEBTERM_VERSION
 ---> Using cache
 ---> 642db2341b46
Step 58/94 : RUN echo $INSTALLATION
 ---> Using cache
 ---> 744716e37f3c
Step 59/94 : RUN pkg-install	kvmd-webterm
 ---> Using cache
 ---> bc61cdfadf8f
Step 60/94 : RUN pkg-install	netctl
 ---> Using cache
 ---> 83d59f25078b
Step 61/94 : RUN pkg-install	parted
 ---> Using cache
 ---> a783abea43ed
Step 62/94 : RUN pkg-install e2fsprogs
 ---> Using cache
 ---> 9a30e96a197f
Step 63/94 : RUN pacman --noconfirm --needed -S raspberrypi-firmware=20210112-2
 ---> Using cache
 ---> d7388bfdfd30
Step 64/94 : RUN pacman --noconfirm -Syu
 ---> Using cache
 ---> 369b12c84708
Step 65/94 : RUN pacman --noconfirm -Sc
 ---> Using cache
 ---> c38e815f95fd
Step 66/94 : RUN pkg-install kvmd-platform-$PLATFORM-$BOARD
 ---> Using cache
 ---> 8a3b15919204
Step 67/94 : RUN systemctl enable kvmd 	&& systemctl enable kvmd-nginx 	&& systemctl enable kvmd-webterm 	&& ([[ ! $PLATFORM =~ ^.*-hdmi$ ]] || systemctl enable kvmd-tc358743) 	&& ([[ ! $PLATFORM =~ ^v[01]-.*$ ]] || systemctl mask serial-getty@ttyAMA0.service) 	&& ([[ ! $PLATFORM =~ ^v2-.*$ ]] || ( 		systemctl enable kvmd-otg 		&& echo "/dev/mmcblk0p3 /var/lib/kvmd/msd  ext4  nodev,nosuid,noexec,ro,errors=remount-ro,data=journal,X-kvmd.otgmsd-root=/var/lib/kvmd/msd,X-kvmd.otgmsd-user=kvmd  0 0" >> /etc/fstab 	))
 ---> Using cache
 ---> c4b687b6cba7
Step 68/94 : COPY stages/pikvm/motd /etc/
 ---> Using cache
 ---> 33467f62ad18
Step 69/94 : RUN [ ! -f /boot/cmdline.txt ] || sed -i -f /usr/share/kvmd/configs.default/os/cmdline/$PLATFORM-$BOARD.sed /boot/cmdline.txt 	&& [ ! -f /usr/share/kvmd/configs.default/os/boot-config/$PLATFORM-$BOARD.txt ] 		|| cp /usr/share/kvmd/configs.default/os/boot-config/$PLATFORM-$BOARD.txt /boot/config.txt
 ---> Running in b03b433baa12
Removing intermediate container b03b433baa12
 ---> 29d724cba94c
Step 70/94 : RUN sed -i -e "s/-session   optional   pam_systemd.so/#-session   optional   pam_systemd.so/g" /etc/pam.d/system-login
 ---> Running in af07fcf5dd51
Removing intermediate container af07fcf5dd51
 ---> 872447975730
Step 71/94 : ARG WIFI_ESSID
 ---> Running in 69c93370106f
Removing intermediate container 69c93370106f
 ---> 9413a4c9d74a
Step 72/94 : ARG WIFI_PASSWD
 ---> Running in 88fd88f3759d
Removing intermediate container 88fd88f3759d
 ---> 1bd1507029ac
Step 73/94 : ARG WIFI_IFACE
 ---> Running in 082e763e0796
Removing intermediate container 082e763e0796
 ---> cd0c6bb88a3a
Step 74/94 : RUN [ -z "$WIFI_ESSID" ] || ( 		export config="/etc/netctl/$WIFI_IFACE-${WIFI_ESSID/ /_}" 		&& echo "Description='Generated by Pi-KVM OS build system'" > $config 		&& echo "Interface='$WIFI_IFACE'" >> $config 		&& echo "Connection=wireless" >> $config 		&& echo "Security=wpa" >> $config 		&& echo "ESSID='$WIFI_ESSID'" >> $config 		&& echo "IP=dhcp" >> $config 		&& echo "Key='$WIFI_PASSWD'" >> $config 		&& systemctl enable netctl-auto@$WIFI_IFACE.service 	)
 ---> Running in 4520f0a486c3
[91mCreated symlink /etc/systemd/system/sys-subsystem-net-devices-wlan0.device.wants/netctl-auto@wlan0.service → /usr/lib/systemd/system/netctl-auto@.service.
[0mRemoving intermediate container 4520f0a486c3
 ---> 8747e440e142
Step 75/94 : ARG ROOT_PASSWD
 ---> Running in 15edb8988804
Removing intermediate container 15edb8988804
 ---> 133d1e72396a
Step 76/94 : ENV ROOT_PASSWD $ROOT_PASSWD
 ---> Running in 62a8d824ba63
Removing intermediate container 62a8d824ba63
 ---> ad74dc0a542c
Step 77/94 : RUN echo "root:$ROOT_PASSWD" | chpasswd 	&& echo "PermitRootLogin yes" >> /etc/ssh/sshd_config 	&& userdel -r -f alarm
 ---> Running in d592cbfa569b
[91muserdel: alarm mail spool (/var/spool/mail/alarm) not found
[0mRemoving intermediate container d592cbfa569b
 ---> 8514740d01d2
Step 78/94 : ARG WEBUI_ADMIN_PASSWD
 ---> Running in b74bd8fbb262
Removing intermediate container b74bd8fbb262
 ---> 9b470f3b2384
Step 79/94 : ENV WEBUI_ADMIN_PASSWD $WEBUI_ADMIN_PASSWD
 ---> Running in f950461d5c10
Removing intermediate container f950461d5c10
 ---> b7ab5780a03b
Step 80/94 : RUN echo "$WEBUI_ADMIN_PASSWD" | kvmd-htpasswd set --read-stdin admin
 ---> Running in 4d95fa837a87
[91m
[0m[91m# Note: Users logged in with this username will stay logged in.
# To invalidate their cookies you need to restart kvmd & kvmd-nginx:
#    systemctl restart kvmd kvmd-nginx
# Be careful, this will break your connection to the Pi-KVM
# and may affect the GPIO relays state. Also don't forget to edit
# the files /etc/kvmd/{vncpasswd,ipmipasswd} and restart
# the corresponding services kvmd-vnc & kvmd-ipmi if necessary.
[0mRemoving intermediate container 4d95fa837a87
 ---> 5b4e9913a29a
Step 81/94 : ARG IPMI_ADMIN_PASSWD
 ---> Running in 13ba0d832c0f
Removing intermediate container 13ba0d832c0f
 ---> 6f8f30f315c6
Step 82/94 : ENV IPMI_ADMIN_PASSWD $IPMI_ADMIN_PASSWD
 ---> Running in 70d1b23fa449
Removing intermediate container 70d1b23fa449
 ---> 9df3064f0722
Step 83/94 : RUN sed -i "\$d" /etc/kvmd/ipmipasswd 	&& echo "admin:$IPMI_ADMIN_PASSWD -> admin:$WEBUI_ADMIN_PASSWD" >> /etc/kvmd/ipmipasswd
 ---> Running in d55d8dc86c33
Removing intermediate container d55d8dc86c33
 ---> d22249e19721
Step 84/94 : ARG NEW_HTTPS_CERT
 ---> Running in a48bad416e4a
Removing intermediate container a48bad416e4a
 ---> 50181c372538
Step 85/94 : ENV NEW_HTTPS_CERT $NEW_HTTPS_CERT
 ---> Running in 93637831bd08
Removing intermediate container 93637831bd08
 ---> 5cfec1f05a7a
Step 86/94 : RUN echo $NEW_HTTPS_CERT 	&& kvmd-gencert --do-the-thing
 ---> Running in 94c113424697
9ffaef58-1522-4d0f-80d8-8c6174b4ce96
[91m+ export LC_ALL=C
[0m[91m+ LC_ALL=C
[0m[91m+ mkdir -p /etc/kvmd/nginx/ssl
[0m[91m+ cd /etc/kvmd/nginx/ssl
[0m[91m+ openssl ecparam -out server.key -name prime256v1 -genkey
[0m[91m+ openssl req -new -x509 -sha256 -nodes -key server.key -out server.crt -days 3650 -subj /C=RU/ST=Moscow/L=Moscow/O=Pi-KVM/OU=Pi-KVM/CN=localhost
[0m[91m+ chown -R root:kvmd-nginx /etc/kvmd/nginx/ssl
[0m[91m+ chmod 400 server.key
[0m[91m+ chmod 444 server.crt
[0m[91m+ chmod 750 /etc/kvmd/nginx/ssl
[0mRemoving intermediate container 94c113424697
 ---> 905b67128dad
Step 87/94 : RUN rm -f /etc/ssh/ssh_host_* /etc/kvmd/nginx/ssl/*
 ---> Running in b90facbca295
Removing intermediate container b90facbca295
 ---> 6decf9b58ea9
Step 88/94 : COPY stages/pikvm-image/_pikvm-firstboot.sh /usr/local/bin/_pikvm-firstboot.sh
 ---> ed860889868b
Step 89/94 : COPY stages/pikvm-image/pikvm-firstboot.service /etc/systemd/system/pikvm-firstboot.service
 ---> 0d9c1f068e1c
Step 90/94 : RUN systemctl enable pikvm-firstboot
 ---> Running in ba6faafc6eda
[91mConfiguration file /etc/systemd/system/pikvm-firstboot.service is marked executable. Please remove executable permission bits. Proceeding anyway.
[0m[91mCreated symlink /etc/systemd/system/multi-user.target.wants/pikvm-firstboot.service → /etc/systemd/system/pikvm-firstboot.service.
[0mRemoving intermediate container ba6faafc6eda
 ---> ba43cdc1f053
Step 91/94 : RUN rm -rf 		/etc/*- 		/var/lib/systemd/* 		/var/lib/private/* 		/var/log/* 		/var/tmp/* 		/tmp/* 		/run/* 		/root/.bash_history 		/root/.cache 		/home/*/.bash_history 		/home/*/.cache 	`LC_ALL=C pacman -Qo /var/cache/* 2>&1 | grep 'error: No package owns' | awk '{print $5}'`
 ---> Running in 936d73f6e0b0
Removing intermediate container 936d73f6e0b0
 ---> d77074196c77
Step 92/94 : RUN sed -i -e "s/^#!!!CheckSpace/CheckSpace/g" /etc/pacman.conf
 ---> Running in 666943e1236c
Removing intermediate container 666943e1236c
 ---> 3d34a0eb8c52
Step 93/94 : RUN rm -f 	/etc/pacman.d/hooks/30-systemd-tmpfiles.hook 	/usr/local/bin/pkg-install 	/usr/local/lib/libpreload-semop.so
 ---> Running in 3935bb943172
Removing intermediate container 3935bb943172
 ---> 9bae702c710e
Step 94/94 : ENV LD_PRELOAD=
 ---> Running in 0c2b1e7fb7ed
Removing intermediate container 0c2b1e7fb7ed
 ---> bcab11e8a01a
[Warning] One or more build-args [REBUILD] were not consumed
Successfully built bcab11e8a01a
Successfully tagged pikvm-os-v2-hdmiusb-pi-builder-arm-result-generic:latest
echo "IMAGE=pikvm-os-v2-hdmiusb-pi-builder-arm-result-generic" > ./.builded.conf
echo "HOSTNAME=pikvm" >> ./.builded.conf
[1m[32m===== Running configuration =====
(B[m    PROJECT = pikvm-os-v2-hdmiusb
    BOARD   = generic
    ARCH    = arm
    STAGES  = __init__ os pikvm-repo watchdog ro pikvm pikvm-image __cleanup__

    BUILD_OPTS = --build-arg PLATFORM=v2-hdmiusb --build-arg USTREAMER_VERSION=3.5-1 --build-arg KVMD_VERSION=2.14-1 --build-arg KVMD_WEBTERM_VERSION=0.35-1 --build-arg WIFI_ESSID=EEE_2.4G --build-arg WIFI_PASSWD=987123456 --build-arg WIFI_IFACE=wlan0 --build-arg ROOT_PASSWD=root --build-arg WEBUI_ADMIN_PASSWD=admin --build-arg IPMI_ADMIN_PASSWD=admin --build-arg NEW_HTTPS_CERT=9ffaef58-1522-4d0f-80d8-8c6174b4ce96 
    HOSTNAME   = pikvm
    LOCALE     = en_US
    TIMEZONE   = Asia/Taipei
    REPO_URL   = http://de3.mirror.archlinuxarm.org
    PIKVM_REPO_URL   = https://pikvm.org/repos
    PIKVM_REPO_KEY   = 912C773ABBD1B584

    CARD = /dev/mmcblk0

    QEMU_PREFIX = /usr
    QEMU_RM     = 1
[1m[32m===== Build complete =====
(B[mmake[1]: Leaving directory '/home/aaa/Desktop/pikvm-office/os/pi-builder/generic-arm'
